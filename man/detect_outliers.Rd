% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outliers.R
\name{detect_outliers}
\alias{detect_outliers}
\title{Detect outliers}
\usage{
detect_outliers(
  .data,
  test_type = c("incremental", "kinetics"),
  time_column = "t",
  vo2_column = "VO2",
  cleaning_level = 0.95,
  cleaning_baseline_fit,
  protocol_n_transitions,
  protocol_baseline_length,
  protocol_transition_length,
  verbose = TRUE
)
}
\arguments{
\item{.data}{Data retrieved from \code{read_data()}.}

\item{test_type}{The test to be analyzed. Either 'incremental' or 'kinetics'.}

\item{time_column}{The name (quoted) of the column containing the time. Depending on the language of your system, this column might not be "t". Therefore, you may specify it here.  Default to "t".}

\item{vo2_column}{The name (quoted) of the column containing the absolute oxygen uptake (VO2) data. Default to 'VO2'.}

\item{cleaning_level}{A numeric scalar between 0 and 1 giving the confidence level for the intervals to be calculated.}

\item{cleaning_baseline_fit}{A vector of the same length as the number in \code{protocol_n_transitions}, indicating what kind of fit to perform for each baseline. Vector accepts characters either 'linear' or 'exponential'.}

\item{protocol_n_transitions}{Number of transitions performed.}

\item{protocol_baseline_length}{The length of the baseline (in seconds).}

\item{protocol_transition_length}{The length of the transition (in seconds).}

\item{verbose}{A boolean indicating whether messages should be printed in the console. Default to \code{TRUE}.}
}
\value{
a \link[tibble:tibble-package]{tibble}
}
\description{
It detects outliers based on prediction bands for the given level of confidence provided (Default to 0.95).
}
\details{
TODO
}
\examples{
## get file path from example data
path_example <- system.file("example_cosmed.xlsx", package = "whippr")

## read data
df <- read_data(path = path_example, metabolic_cart = "cosmed")

## detect outliers
data_outliers <- detect_outliers(
  .data = df,
  test_type = "kinetics",
  time_column = "t",
  vo2_column = "VO2",
  cleaning_level = 0.95,
  cleaning_baseline_fit = c("linear", "exponential", "exponential"),
  protocol_n_transitions = 3,
  protocol_baseline_length = 360,
  protocol_transition_length = 360,
  verbose = TRUE
 )
}
